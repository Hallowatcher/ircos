// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    style={
        Object {
            "alignContent": "center",
            "alignItems": "center",
            "backgroundColor": "#acadaf",
            "display": "flex",
            "flexDirection": "column",
            "height": "100%",
            "justifyContent": "center",
            "margin": 0,
            "padding": 0,
            "width": "100%",
          }
    }
>
    <div
        style={
            Object {
                "alignSelf": "center",
                "backgroundColor": "white",
                "boxShadow": "0 0 4px rgba(0, 0, 0, 0.35)",
              }
        }
    >
        <LoginForm
            submitLogin={[Function]}
        />
    </div>
</div>,
  "nodes": Array [
    <div
      style={
            Object {
                  "alignContent": "center",
                  "alignItems": "center",
                  "backgroundColor": "#acadaf",
                  "display": "flex",
                  "flexDirection": "column",
                  "height": "100%",
                  "justifyContent": "center",
                  "margin": 0,
                  "padding": 0,
                  "width": "100%",
                }
      }
>
      <div
            style={
                  Object {
                        "alignSelf": "center",
                        "backgroundColor": "white",
                        "boxShadow": "0 0 4px rgba(0, 0, 0, 0.35)",
                      }
            }
      >
            <LoginForm
                  submitLogin={[Function]}
            />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Login
        createConnection={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Login {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "createConnection": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          style={
                    Object {
                              "alignContent": "center",
                              "alignItems": "center",
                              "backgroundColor": "#acadaf",
                              "display": "flex",
                              "flexDirection": "column",
                              "height": "100%",
                              "justifyContent": "center",
                              "margin": 0,
                              "padding": 0,
                              "width": "100%",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "alignSelf": "center",
                                        "backgroundColor": "white",
                                        "boxShadow": "0 0 4px rgba(0, 0, 0, 0.35)",
                                      }
                    }
          >
                    <LoginForm
                              submitLogin={[Function]}
                    />
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          style={
                    Object {
                              "alignContent": "center",
                              "alignItems": "center",
                              "backgroundColor": "#acadaf",
                              "display": "flex",
                              "flexDirection": "column",
                              "height": "100%",
                              "justifyContent": "center",
                              "margin": 0,
                              "padding": 0,
                              "width": "100%",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "alignSelf": "center",
                                        "backgroundColor": "white",
                                        "boxShadow": "0 0 4px rgba(0, 0, 0, 0.35)",
                                      }
                    }
          >
                    <LoginForm
                              submitLogin={[Function]}
                    />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Login
    createConnection={[Function]}
/>,
}
`;
