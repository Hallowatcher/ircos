// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JoinModal should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="Join channel"
    isOpen={false}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnOverlayClick={true}
    style={
        Object {
            "content": Object {
              "bottom": "auto",
              "left": "50%",
              "marginRight": "-50%",
              "right": "auto",
              "top": "50%",
              "transform": "translate(-50%, -50%)",
            },
          }
    }
>
    <h1>
        Join channel modal
    </h1>
    <form
        onSubmit={[Function]}
    >
        <input
            onChange={[Function]}
            placeholder="#channel or user"
        />
        <input
            type="submit"
        />
    </form>
</Modal>,
  "nodes": Array [
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      closeTimeoutMS={0}
      contentLabel="Join channel"
      isOpen={false}
      onRequestClose={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnOverlayClick={true}
      style={
            Object {
                  "content": Object {
                    "bottom": "auto",
                    "left": "50%",
                    "marginRight": "-50%",
                    "right": "auto",
                    "top": "50%",
                    "transform": "translate(-50%, -50%)",
                  },
                }
      }
>
      <h1>
            Join channel modal
      </h1>
      <form
            onSubmit={[Function]}
      >
            <input
                  onChange={[Function]}
                  placeholder="#channel or user"
            />
            <input
                  type="submit"
            />
      </form>
</Modal>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <JoinModal
        isOpen={false}
        joinChannel={[Function]}
        onClose={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": JoinModal {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "isOpen": false,
          "joinChannel": [Function],
          "onClose": [Function],
        },
        "refs": Object {},
        "state": Object {
          "channel": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Modal
          ariaHideApp={true}
          bodyOpenClassName="ReactModal__Body--open"
          closeTimeoutMS={0}
          contentLabel="Join channel"
          isOpen={false}
          onRequestClose={[Function]}
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          shouldCloseOnOverlayClick={true}
          style={
                    Object {
                              "content": Object {
                                "bottom": "auto",
                                "left": "50%",
                                "marginRight": "-50%",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
          }
>
          <h1>
                    Join channel modal
          </h1>
          <form
                    onSubmit={[Function]}
          >
                    <input
                              onChange={[Function]}
                              placeholder="#channel or user"
                    />
                    <input
                              type="submit"
                    />
          </form>
</Modal>,
        "_debugID": 2,
        "_renderedOutput": <Modal
          ariaHideApp={true}
          bodyOpenClassName="ReactModal__Body--open"
          closeTimeoutMS={0}
          contentLabel="Join channel"
          isOpen={false}
          onRequestClose={[Function]}
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          shouldCloseOnOverlayClick={true}
          style={
                    Object {
                              "content": Object {
                                "bottom": "auto",
                                "left": "50%",
                                "marginRight": "-50%",
                                "right": "auto",
                                "top": "50%",
                                "transform": "translate(-50%, -50%)",
                              },
                            }
          }
>
          <h1>
                    Join channel modal
          </h1>
          <form
                    onSubmit={[Function]}
          >
                    <input
                              onChange={[Function]}
                              placeholder="#channel or user"
                    />
                    <input
                              type="submit"
                    />
          </form>
</Modal>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <JoinModal
    isOpen={false}
    joinChannel={[Function]}
    onClose={[Function]}
/>,
}
`;
