// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddTab should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <form
    onSubmit={[Function]}
    style={
        Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "column",
            "padding": "10px",
          }
    }
>
    <h1>
        ircos
    </h1>
    <input
        name="user"
        onChange={[Function]}
        placeholder="Username"
        style={
            Object {
                "border": 0,
                "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                "outline": "none",
                "padding": "4px",
              }
        }
        type="text"
        value=""
    />
    <input
        name="pass"
        onChange={[Function]}
        placeholder="Password"
        style={
            Object {
                "border": 0,
                "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                "outline": "none",
                "padding": "4px",
              }
        }
        type="password"
        value=""
    />
    <input
        style={
            Object {
                "border": 0,
                "padding": "4px",
              }
        }
        type="submit"
        value="Login!"
    />
</form>,
  "nodes": Array [
    <form
      onSubmit={[Function]}
      style={
            Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "column",
                  "padding": "10px",
                }
      }
>
      <h1>
            ircos
      </h1>
      <input
            name="user"
            onChange={[Function]}
            placeholder="Username"
            style={
                  Object {
                        "border": 0,
                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                        "outline": "none",
                        "padding": "4px",
                      }
            }
            type="text"
            value=""
      />
      <input
            name="pass"
            onChange={[Function]}
            placeholder="Password"
            style={
                  Object {
                        "border": 0,
                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                        "outline": "none",
                        "padding": "4px",
                      }
            }
            type="password"
            value=""
      />
      <input
            style={
                  Object {
                        "border": 0,
                        "padding": "4px",
                      }
            }
            type="submit"
            value="Login!"
      />
</form>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LoginForm
        error={null}
        submitLogin={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LoginForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleSubmit": [Function],
        "inputChanged": [Function],
        "props": Object {
          "error": null,
          "submitLogin": [Function],
        },
        "refs": Object {},
        "state": Object {
          "pass": "",
          "user": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <form
          onSubmit={[Function]}
          style={
                    Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "padding": "10px",
                            }
          }
>
          <h1>
                    ircos
          </h1>
          <input
                    name="user"
                    onChange={[Function]}
                    placeholder="Username"
                    style={
                              Object {
                                        "border": 0,
                                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                                        "outline": "none",
                                        "padding": "4px",
                                      }
                    }
                    type="text"
                    value=""
          />
          <input
                    name="pass"
                    onChange={[Function]}
                    placeholder="Password"
                    style={
                              Object {
                                        "border": 0,
                                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                                        "outline": "none",
                                        "padding": "4px",
                                      }
                    }
                    type="password"
                    value=""
          />
          <input
                    style={
                              Object {
                                        "border": 0,
                                        "padding": "4px",
                                      }
                    }
                    type="submit"
                    value="Login!"
          />
</form>,
        "_debugID": 2,
        "_renderedOutput": <form
          onSubmit={[Function]}
          style={
                    Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "padding": "10px",
                            }
          }
>
          <h1>
                    ircos
          </h1>
          <input
                    name="user"
                    onChange={[Function]}
                    placeholder="Username"
                    style={
                              Object {
                                        "border": 0,
                                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                                        "outline": "none",
                                        "padding": "4px",
                                      }
                    }
                    type="text"
                    value=""
          />
          <input
                    name="pass"
                    onChange={[Function]}
                    placeholder="Password"
                    style={
                              Object {
                                        "border": 0,
                                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                                        "outline": "none",
                                        "padding": "4px",
                                      }
                    }
                    type="password"
                    value=""
          />
          <input
                    style={
                              Object {
                                        "border": 0,
                                        "padding": "4px",
                                      }
                    }
                    type="submit"
                    value="Login!"
          />
</form>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LoginForm
    error={null}
    submitLogin={[Function]}
/>,
}
`;

exports[`AddTab should render with error 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <form
    onSubmit={[Function]}
    style={
        Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "column",
            "padding": "10px",
          }
    }
>
    <h1>
        ircos
    </h1>
    <div
        style={
            Object {
                "color": "rgba(255, 0, 0, 0.65)",
                "fontSize": 14,
              }
        }
    >
        Error
    </div>
    <input
        name="user"
        onChange={[Function]}
        placeholder="Username"
        style={
            Object {
                "border": 0,
                "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                "outline": "none",
                "padding": "4px",
              }
        }
        type="text"
        value=""
    />
    <input
        name="pass"
        onChange={[Function]}
        placeholder="Password"
        style={
            Object {
                "border": 0,
                "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                "outline": "none",
                "padding": "4px",
              }
        }
        type="password"
        value=""
    />
    <input
        style={
            Object {
                "border": 0,
                "padding": "4px",
              }
        }
        type="submit"
        value="Login!"
    />
</form>,
  "nodes": Array [
    <form
      onSubmit={[Function]}
      style={
            Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "column",
                  "padding": "10px",
                }
      }
>
      <h1>
            ircos
      </h1>
      <div
            style={
                  Object {
                        "color": "rgba(255, 0, 0, 0.65)",
                        "fontSize": 14,
                      }
            }
      >
            Error
      </div>
      <input
            name="user"
            onChange={[Function]}
            placeholder="Username"
            style={
                  Object {
                        "border": 0,
                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                        "outline": "none",
                        "padding": "4px",
                      }
            }
            type="text"
            value=""
      />
      <input
            name="pass"
            onChange={[Function]}
            placeholder="Password"
            style={
                  Object {
                        "border": 0,
                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                        "outline": "none",
                        "padding": "4px",
                      }
            }
            type="password"
            value=""
      />
      <input
            style={
                  Object {
                        "border": 0,
                        "padding": "4px",
                      }
            }
            type="submit"
            value="Login!"
      />
</form>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <LoginForm
        error="Error"
        submitLogin={[Function]}
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LoginForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleSubmit": [Function],
        "inputChanged": [Function],
        "props": Object {
          "error": "Error",
          "submitLogin": [Function],
        },
        "refs": Object {},
        "state": Object {
          "pass": "",
          "user": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <form
          onSubmit={[Function]}
          style={
                    Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "padding": "10px",
                            }
          }
>
          <h1>
                    ircos
          </h1>
          <div
                    style={
                              Object {
                                        "color": "rgba(255, 0, 0, 0.65)",
                                        "fontSize": 14,
                                      }
                    }
          >
                    Error
          </div>
          <input
                    name="user"
                    onChange={[Function]}
                    placeholder="Username"
                    style={
                              Object {
                                        "border": 0,
                                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                                        "outline": "none",
                                        "padding": "4px",
                                      }
                    }
                    type="text"
                    value=""
          />
          <input
                    name="pass"
                    onChange={[Function]}
                    placeholder="Password"
                    style={
                              Object {
                                        "border": 0,
                                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                                        "outline": "none",
                                        "padding": "4px",
                                      }
                    }
                    type="password"
                    value=""
          />
          <input
                    style={
                              Object {
                                        "border": 0,
                                        "padding": "4px",
                                      }
                    }
                    type="submit"
                    value="Login!"
          />
</form>,
        "_debugID": 6,
        "_renderedOutput": <form
          onSubmit={[Function]}
          style={
                    Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "padding": "10px",
                            }
          }
>
          <h1>
                    ircos
          </h1>
          <div
                    style={
                              Object {
                                        "color": "rgba(255, 0, 0, 0.65)",
                                        "fontSize": 14,
                                      }
                    }
          >
                    Error
          </div>
          <input
                    name="user"
                    onChange={[Function]}
                    placeholder="Username"
                    style={
                              Object {
                                        "border": 0,
                                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                                        "outline": "none",
                                        "padding": "4px",
                                      }
                    }
                    type="text"
                    value=""
          />
          <input
                    name="pass"
                    onChange={[Function]}
                    placeholder="Password"
                    style={
                              Object {
                                        "border": 0,
                                        "borderLeft": "3px solid rgba(0, 0, 0, 0.5)",
                                        "outline": "none",
                                        "padding": "4px",
                                      }
                    }
                    type="password"
                    value=""
          />
          <input
                    style={
                              Object {
                                        "border": 0,
                                        "padding": "4px",
                                      }
                    }
                    type="submit"
                    value="Login!"
          />
</form>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LoginForm
    error="Error"
    submitLogin={[Function]}
/>,
}
`;
